import routes from 'soya/lib/router/Routes';

import TestList from './src/pages/landing/TestList/TestList';
routes.reg(TestList, './src/pages/landing/TestList/TestList');

import LoadComponent from './src/pages/compile/LoadComponent/LoadComponent';
import RuntimeComponent from './src/pages/redux/RuntimeComponent/RuntimeComponent';
import Hydration from './src/pages/redux/Hydration/Hydration';
import ServerSegmentDependencies from './src/pages/redux/ServerSegmentDependencies/ServerSegmentDependencies';
import ClientSegmentDependencies from './src/pages/redux/ClientSegmentDependencies/ClientSegmentDependencies';
import ClientInstantSegmentDependencies from './src/pages/redux/ClientInstantSegmentDependencies/ClientInstantSegmentDependencies';
import SegmentCookie from './src/pages/redux/SegmentCookie/SegmentCookie';
import SegmentCookieClient from './src/pages/redux/SegmentCookieClient/SegmentCookieClient';
import TestLocalSegment from './src/pages/redux/TestLocalSegment/TestLocalSegment';
import MutationTest from './src/pages/redux/MutationTest/MutationTest';
import SimpleForm from './src/pages/redux/SimpleForm/SimpleForm';
import RepeatableForm from './src/pages/redux/RepeatableForm/RepeatableForm';
import CookieSet from './src/pages/http/CookieSet/CookieSet';
import CookieRemove from './src/pages/http/CookieRemove/CookieRemove';
import UserJson from './src/pages/json/UserJson/UserJson';
import ContextJson from './src/pages/json/ContextJson/ContextJson';
import BookingJson from './src/pages/json/BookingJson/BookingJson';
import AirportJson from './src/pages/json/AirportJson/AirportJson';
import ValidateApi from './src/pages/json/ValidateApi/ValidateApi';
import IncUserPostApi from './src/pages/json/IncUserPostApi/IncUserPostApi';
import ResetUserPostApi from './src/pages/json/ResetUserPostApi/ResetUserPostApi';
import BadgeJson from './src/pages/json/BadgeJson/BadgeJson';
import FlipBadgeApi from './src/pages/json/FlipBadgeApi/FlipBadgeApi';
import AdditionJson from './src/pages/json/AdditionJson/AdditionJson';
import RandomTimeEcho from './src/pages/json/RandomTimeEchoJson/RandomTimeEchoJson';
import NotFound from './src/pages/system/NotFound/NotFound';

routes.add('TEST_LIST', TestList, ['method', 'GET'], ['path', '/'], '');
routes.add('LOAD_COMPONENT', LoadComponent, ['method', 'GET'], ['path', '/load-component']);
routes.add('RUNTIME_COMPONENT', RuntimeComponent, ['method', 'GET'], ['path', '/data/redux/runtime-component']);
routes.add('HYDRATION', Hydration, ['method', 'GET'], ['path', '/data/redux/hydration']);
routes.add('SERVER_SEGMENT_DEPENDENCIES', ServerSegmentDependencies, ['method', 'GET'], ['path', '/data/redux/dependencies/server']);
routes.add('CLIENT_SEGMENT_DEPENDENCIES', ClientSegmentDependencies, ['method', 'GET'], ['path', '/data/redux/dependencies/client']);
routes.add('CLIENT_INSTANT_SEGMENT_DEPENDENCIES', ClientInstantSegmentDependencies, ['method', 'GET'], ['path', '/data/redux/dependencies/client-instant']);
routes.add('SEGMENT_COOKIE', SegmentCookie, ['method', 'GET'], ['path', '/data/redux/segment-cookie']);
routes.add('SEGMENT_COOKIE_CLIENT', SegmentCookieClient, ['method', 'GET'], ['path', '/data/redux/segment-cookie-client']);
routes.add('TEST_LOCAL_SEGMENT', TestLocalSegment, ['method', 'GET'], ['path', '/data/redux/local']);
routes.add('MUTATION_TEST', MutationTest, ['method', 'GET'], ['path', '/data/redux/mutation']);
routes.add('SIMPLE_FORM', SimpleForm, ['method', 'GET'], ['path', '/data/redux/simple-form']);
routes.add('REPEATABLE_FORM', RepeatableForm, ['method', 'GET'], ['path', '/data/redux/repeatable-form']);
routes.add('COOKIE_SET', CookieSet, ['method', 'GET'], ['path', '/http/cookie/set']);
routes.add('COOKIE_REMOVE', CookieRemove, ['method', 'GET'], ['path', '/http/cookie/remove']);
routes.add('USER_JSON', UserJson, ['method', 'GET'], ['path', '/api/user/:username']);
routes.add('CONTEXT_JSON', ContextJson, ['method', 'GET'], ['path', '/api/context']);
routes.add('BOOKING_JSON', BookingJson, ['method', 'GET'], ['path', '/api/booking/:id']);
routes.add('AIRPORT_JSON', AirportJson, ['method', 'GET'], ['path', '/api/airport/list']);
routes.add('VALIDATE_API', ValidateApi, ['method', 'GET'], ['path', '/api/validate/:type/:value']);
routes.add('INC_USER_POST_API', IncUserPostApi, ['method', 'GET'], ['path', '/api/user/inc-post/:username']);
routes.add('RESET_USER_POST_API', ResetUserPostApi, ['method', 'GET'], ['path', '/api/user/reset-post/:number']);
routes.add('BADGE_JSON', BadgeJson, ['method', 'GET'], ['path', '/api/user/badge/list']);
routes.add('FLIP_BADGE_API', FlipBadgeApi, ['method', 'GET'], ['path', '/api/user/badge/flip']);
routes.add('ADDITION_JSON', AdditionJson, ['method', 'GET'], ['path', '/api/addition/:a/:b']);
routes.add('RANDOM_TIME_ECHO', RandomTimeEcho, ['method', 'GET'], ['path', '/api/random-time-echo/:value']);
routes.addNotFoundPage(NotFound);

export default routes;